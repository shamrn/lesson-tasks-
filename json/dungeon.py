# -*- coding: utf-8 -*-

# С помощью JSON файла rpg.json задана "карта" подземелья.
# Подземелье было выкопано монстрами и они всё ещё скрываются где-то в его глубинах,
# планируя набеги на близлежащие поселения.
# Само подземелье состоит из двух главных разветвлений и нескольких развилок,
# и лишь один из путей приведёт вас к главному Боссу
# и позволит предотвратить набеги и спасти мирных жителей.

# Напишите игру, в которой пользователь, с помощью консоли,
# сможет:
# 1) исследовать это подземелье:
#   -- передвижение должно осуществляться присваиванием переменной и только в одну сторону
#   -- перемещаясь из одной локации в другую, пользователь теряет время, указанное в конце названия каждой локации
# Так, перейдя в локацию Location_1_tm500 - вам необходимо будет списать со счёта 500 секунд.
# Тег, в названии локации, указывающий на время - 'tm'.
#
# 2) сражаться с монстрами:
#   -- сражение имитируется списанием со счета персонажа N-количества времени и получением N-количества опыта
#   -- опыт и время указаны в названиях монстров (после exp указано значение опыта и после tm указано время)
# Так, если в локации вы обнаружили монстра Mob_exp10_tm20 (или Boss_exp10_tm20)
# необходимо списать со счета 20 секунд и добавить 10 очков опыта.
# Теги указывающие на опыт и время - 'exp' и 'tm'.
# После того, как игра будет готова, сыграйте в неё и наберите 280 очков при положительном остатке времени.

# По мере продвижения вам так же необходимо вести журнал,
# в котором должна содержаться следующая информация:
# -- текущее положение
# -- текущее количество опыта
# -- текущая дата (отсчёт вести с первой локации с помощью datetime)
# После прохождения лабиринта, набора 280 очков опыта и проверки на остаток времени (remaining_time > 0),
# журнал необходимо записать в csv файл (назвать dungeon_json.csv, названия столбцов взять из field_names).

# Пример лога игры:
# Вы находитесь в Location_0_tm0
# У вас 0 опыта и осталось 1234567890.0987654321 секунд
# Прошло уже 0:00:00
# Внутри вы видите:
# -- Монстра Mob_exp10_tm0
# -- Вход в локацию: Location_1_tm10400000
# -- Вход в локацию: Location_2_tm333000000
# Выберите действие:
# 1.Атаковать монстра
# 2.Перейти в другую локацию
# 3.Выход


import json
import re


class Dungeon:
    def __init__(self, name_json):
        with open(name_json) as f:
            self.data = json.load(f)
        self.remaining_time = 1234567890.0987654321
        self.ext = 0
        self.field_names = ['current_location', 'current_experience', 'current_date']
        self.game = True

    def run_dungeon(self):
        while self.game:
            num = int(input(f'В переди локации {[locat for locat in self.data]},выбери в какую идти:'))
            locat = [locat for locat in self.data][num]
            self.act_hero(locat)
            for iter_, location in enumerate(self.data[locat]):
                if iter_ == 0:
                    self.data.clear()
                if type(location) == dict:
                    self.data.update(location)
                else:
                    self.act_hero(location)

    def act_hero(self, location):
        ext_tm = re.findall(r'(\d+)\.{0,1}', location)
        ext, tm = ext_tm[0], ext_tm[1]

        if 'Location' in location:
            print(f'Герой попал в новую локацию , отняло время: {tm}')
            self.remaining_time -= int(tm)

        if 'Mob' in location:
            print(f'Герой атаковал моба, получил опыта: {ext} , сражение отняло время: {tm}')
            self.ext += int(ext)
            self.remaining_time -= int(tm)

        if 'Boss' in location:
            print(f'Герой встретил босса ,получил опыта: {ext} , сражение отняло время: {tm}')
            self.ext += int(ext)
            self.remaining_time -= int(tm)
            print(f'Итог заработано опыта: {ext}, время осталось {tm}')
            self.game = False


dung = Dungeon('rpg.json')
dung.run_dungeon()
